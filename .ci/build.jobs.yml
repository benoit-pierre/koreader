lint:

  - id: lint

emulator: # {{{

  - id: emu-clang
    job: Clang
    image: koreader/kobase-clang:0.4.5-22.04
    target: ""
    makeflags: PARALLEL_JOBS=5 KODEBUG= USE_CLANG=1
    cache_size: 150M
    test: true

  - &EMU_GCC
    id: emu-gcc
    job: GCC
    image: koreader/kobase:0.5.3-22.04
    target: ""
    makeflags: PARALLEL_JOBS=5 KODEBUG=
    cache_size: 280M
    test: true
    check_ffi_cdecls: true

  - <<: *EMU_GCC
    id: emu-gcc-debug
    job: GCC Debug
    makeflags: PARALLEL_JOBS=5 KODEBUG=1

# }}}

macos: # {{{

  - &MACOS
    id: macos-arm64
    job: "26 ARM64 ðŸ”¨26.0.1 ðŸŽ¯11.0"
    cache: macos.26_ARM64_xcode.26.0.1_11.0
    runs-on: macos-26
    xcode_version: "26.0.1"
    macosx_deployment_target: "11.0"
    makeflags: PARALLEL_JOBS=4
    target: macos
    cache_size: 256MB
    test: true
    artifacts: koreader-*.7z

  - <<: *MACOS
    id: macos-x86_64
    job: "15 x86-64 ðŸ”¨16.4 ðŸŽ¯10.15"
    cache: macos.15_x86_64_xcode.16.4_10.15
    runs-on: macos-15-intel
    xcode_version: "16.4"
    macosx_deployment_target: "10.15"
    makeflags: PARALLEL_JOBS=5

# }}}

platform:

  # android {{{

  - &ANDROID
    id: android-arm
    job: Android ARM
    image: koreader/koandroid:0.9.5-22.04
    makeflags: PARALLEL_JOBS=5 LTO=1 OSIZE=1
    cache_size: 160M
    artifacts: koreader-*.apk

  - <<: *ANDROID
    id: android-arm64
    job: Android ARM64

  - <<: *ANDROID
    id: android-x86
    job: Android x86

  - <<: *ANDROID
    id: android-x86_64
    job: Android x86_64

  # }}}

  # appimage {{{

  - &APPIMAGE
    id: appimage-aarch64
    job: AppImage AArch64
    runs-on: ubuntu-24.04-arm
    image: koreader/koappimage:0.6.3-22.04
    target: appimage
    makeflags: PARALLEL_JOBS=5 LTO=1 OSIZE=1 MONOLIBTIC=1
    cache_size: 300M
    test: true
    artifacts: koreader-*.AppImage

  # FIXME: does not work, no support for using a docker image with
  # the `--platform=â€¦` docker argument (see `build.matrix.yml`)â€¦
  # - <<: *APPIMAGE
  #   id: appimage-armhf
  #   job: AppImage ARMhf
  #   platform: aarch64

  - <<: *APPIMAGE
    id: appimage-x86_64
    job: AppImage x86_64
    runs-on:

  # }}}

  - id: cervantes
    job: Cervantes
    image: koreader/kocervantes:0.4.5-22.04
    makeflags: PARALLEL_JOBS=5 LTO=1 OSIZE=1 MONOLIBTIC=1
    check_ffi_cdecls: true
    artifacts: |
      koreader-*.tar.xz

  # kindle {{{

  - &KINDLE
    id: kindle
    job: Kindle
    image: koreader/kokindle:0.4.5-22.04
    makeflags: PARALLEL_JOBS=5 LTO=1 OSIZE=1 MONOLIBTIC=1
    check_ffi_cdecls: true
    artifacts: |
      koreader-*.tar.xz

  - <<: *KINDLE
    id: kindlehf
    job: Kindle HF

  - <<: *KINDLE
    id: kindlepw2
    job: Kindle PW2

  - <<: *KINDLE
    id: kindle-legacy
    job: Kindle Legacy
    check_ffi_cdecls: false

  # }}}

  - id: kobo
    job: Kobo
    image: koreader/kokobo:0.4.5-22.04
    makeflags: PARALLEL_JOBS=5 LTO=1 OSIZE=1 MONOLIBTIC=1
    check_ffi_cdecls: true
    artifacts: |
      koreader-*.tar.xz

  - id: pocketbook
    job: PocketBook
    image: koreader/kopb:0.5.5-22.04
    makeflags: PARALLEL_JOBS=5 LTO=1 OSIZE=1 MONOLIBTIC=1
    check_ffi_cdecls: true
    artifacts: |
      koreader-*.tar.xz

  # remarkable {{{

  - &REMARKABLE
    id: remarkable
    job: Remarkable
    image: koreader/koremarkable:0.4.5-22.04
    makeflags: PARALLEL_JOBS=5 LTO=1 OSIZE=1 MONOLIBTIC=1
    check_ffi_cdecls: true
    artifacts: |
      koreader-*.tar.xz

  - <<: *REMARKABLE
    id: remarkable-aarch64
    job: Remarkable Pro

  # }}}

  - id: sony-prstux
    job: Sony PRSTUX
    image: koreader/kodeb:0.2.5-22.04
    makeflags: PARALLEL_JOBS=5 LTO=1 OSIZE=1 MONOLIBTIC=1
    cache_size: 280M
    artifacts: |
      koreader-*.tar.xz

# vim: foldmethod=marker foldlevel=0
