diff --git a/scripts/hexdump.c b/scripts/hexdump.c
--- a/scripts/hexdump.c
+++ b/scripts/hexdump.c
@@ -37,8 +37,7 @@ main(int argc, char **argv)
 {
 	FILE *fo;
 	FILE *fi;
-	char filename[256];
-	char *basename;
+	char varname[256];
 	char *p;
 	int i, optind, size;
 
@@ -71,32 +70,33 @@ main(int argc, char **argv)
 
 	for (i = optind+1; i < argc; i++)
 	{
-		fi = fopen(argv[i], "rb");
-		if (!fi)
+		p = strchr(argv[i], '=');
+		if (p)
+		{
+			size = p++ - argv[i];
+		}
+		else
+		{
+			size = strlen(argv[i]);
+			p = argv[i];
+		}
+		if (size >= sizeof(varname))
 		{
 			fclose(fo);
-			fprintf(stderr, "hexdump: could not open input file '%s'\n", argv[i]);
+			fprintf(stderr, "hexdump: variable name '%.*s' too long\n", size, argv[i]);
 			return 1;
 		}
+		snprintf(varname, sizeof(varname), "%.*s", size, argv[i]);
 
-		basename = strrchr(argv[i], '/');
-		if (!basename)
-			basename = strrchr(argv[i], '\\');
-		if (basename)
-			basename++;
-		else
-			basename = argv[i];
-
-		if (strlen(basename) >= sizeof(filename))
+		fi = fopen(p, "rb");
+		if (!fi)
 		{
-			fclose(fi);
 			fclose(fo);
-			fprintf(stderr, "hexdump: filename '%s' too long\n", basename);
+			fprintf(stderr, "hexdump: could not open input file '%s'\n", p);
 			return 1;
 		}
 
-		strcpy(filename, argv[i]);
-		for (p = filename; *p; ++p)
+		for (p = varname; *p; ++p)
 		{
 			if (*p == '/' || *p == '.' || *p == '\\' || *p == '-')
 				*p = '_';
@@ -106,8 +106,8 @@ main(int argc, char **argv)
 		size = ftell(fi);
 		fseek(fi, 0, SEEK_SET);
 
-		fprintf(fo, "const int fz_%s_size = %d;\n", filename, size + zero);
-		fprintf(fo, "const unsigned char fz_%s[] =", filename);
+		fprintf(fo, "const int fz_%s_size = %d;\n", varname, size + zero);
+		fprintf(fo, "const unsigned char fz_%s[] =", varname);
 		fprintf(fo, string ? "\n" : " {\n");
 		hexdump(fo, fi);
 		if (!zero)
