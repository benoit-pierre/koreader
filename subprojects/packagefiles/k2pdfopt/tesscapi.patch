diff --git a/include_mod/tesseract.h b/include_mod/tesseract.h
--- a/include_mod/tesseract.h
+++ b/include_mod/tesseract.h
@@ -24,6 +24,9 @@ int tess_capi_get_ocr_multiword(void *vapi,PIX *pix,int segmode,
                                 FILE *out);
 void tess_capi_end(void *api);
 
+const char* tess_capi_get_init_language(void *api);
+int tess_capi_get_word_boxes(void *api, PIX *pix, BOXA **out_boxa, int is_cjk, FILE *out);
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/tesseract_mod/tesscapi.cpp b/tesseract_mod/tesscapi.cpp
--- a/tesseract_mod/tesscapi.cpp
+++ b/tesseract_mod/tesscapi.cpp
@@ -41,10 +41,8 @@
 #endif
 
 #include "allheaders.h"
+#include "config_auto.h"
 #include "baseapi.h"
-#include "strngs.h"
-#include "params.h"
-#include "blobs.h"
 #include "simddetect.h"
 #include "tesseractclass.h"
 /*
@@ -54,8 +52,14 @@
 /* C Wrappers */
 #include "tesseract.h"
 
+// For our try/catch block
+#include <stdexcept>
+
 // static tesseract::TessBaseAPI api[4];
 
+void tess_capi_set_logfile(const char *filename) {}
+void tess_capi_debug_message(char *message) { tprintf("%s",message); }
+
 /*
 ** ocr_type=0:  OEM_DEFAULT
 ** ocr_type=1:  OEM_TESSERACT_ONLY
@@ -297,6 +301,47 @@ int tess_capi_get_ocr_multiword(void *vapi,PIX *pix,int segmode,
     return(0);
     }
 
+int tess_capi_get_word_boxes(void *vapi, PIX *pix, BOXA **out_boxa, int is_cjk, FILE *out)
+
+    {
+    if (vapi==NULL)
+        return -1;
+
+    tesseract::TessBaseAPI *api;
+    api=(tesseract::TessBaseAPI *)vapi;
+    try {
+        api->InitForAnalysePage();
+        api->SetPageSegMode(tesseract::PSM_AUTO);
+        api->SetImage(pix);
+        if (is_cjk) {
+            api->SetVariable("textord_use_cjk_fp_model","1");
+            *out_boxa = api->GetConnectedComponents(NULL);
+        } else {
+            api->SetVariable("textord_use_cjk_fp_model","0");
+            *out_boxa = api->GetWords(NULL);
+        }
+    } catch (const std::exception &e) {
+       if (out!=NULL)
+           fprintf(out,"tesscapi:  Error during page segmentation. %s\n", e.what());
+       api->Clear();
+       return -1;
+    }
+    printf("engine inited in %s\n", api->GetInitLanguagesAsString());
+#ifndef DISABLED_LEGACY_ENGINE
+    api->ClearAdaptiveClassifier();
+#endif
+    api->Clear();
+    return(0);
+    }
+
+const char* tess_capi_get_init_language(void *vapi) {
+    if (vapi==NULL)
+        return "";
+
+    tesseract::TessBaseAPI *api;
+    api=(tesseract::TessBaseAPI *)vapi;
+    return api->GetInitLanguagesAsString();
+}
 
 void tess_capi_end(void *vapi)
 
