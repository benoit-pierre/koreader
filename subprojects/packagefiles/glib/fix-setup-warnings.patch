diff --git a/docs/reference/gio/meson.build b/docs/reference/gio/meson.build
--- a/docs/reference/gio/meson.build
+++ b/docs/reference/gio/meson.build
@@ -154,12 +154,6 @@ if get_option('gtk_doc')
     command : [concat_files_helper, '@OUTPUT@', '@INPUT@'],
   )
 
-  configure_file(
-    output : 'gio-docs-platform.xml',
-    input : platform_file,
-    copy : true,
-  )
-
   content_files = [
     'overview.xml',
     'migrating-posix.xml',
@@ -176,6 +170,8 @@ if get_option('gtk_doc')
     'gdbus-codegen.xml',
   ]
 
+  content_files += fs.copyfile(platform_file, 'gio-docs-platform.xml')
+
   content_files += [
     gdbus_example_objectmanager_xml,
     gdbus_example_objectmanager_sources,
diff --git a/gio/gdbus-2.0/codegen/meson.build b/gio/gdbus-2.0/codegen/meson.build
--- a/gio/gdbus-2.0/codegen/meson.build
+++ b/gio/gdbus-2.0/codegen/meson.build
@@ -30,6 +30,7 @@ meson.override_find_program('gdbus-codegen', gdbus_codegen)
 codegen_dir = join_paths(glib_datadir, 'glib-2.0', 'codegen')
 
 gdbus_codegen_built_files = []
+gdbus_codegen_built_targets = []
 gdbus_codegen_built_files += configure_file(input : 'config.py.in',
                                             output : 'config.py',
                                             install_dir : codegen_dir,
@@ -39,8 +40,8 @@ gdbus_codegen_built_files += configure_file(input : 'config.py.in',
 foreach f : gdbus_codegen_files
   # Copy these into the builddir so that gdbus-codegen can be used uninstalled
   # and then install it too so that it can be used after installation
-  gdbus_codegen_built_files += configure_file(input : f, output : f,
-                                              install_dir : codegen_dir,
-                                              install_tag : 'bin-devel',
-                                              copy : true)
+  gdbus_codegen_built_targets += fs.copyfile(f, f,
+                                             install : true,
+                                             install_dir : codegen_dir,
+                                             install_tag : 'bin-devel')
 endforeach
diff --git a/gio/meson.build b/gio/meson.build
--- a/gio/meson.build
+++ b/gio/meson.build
@@ -241,6 +241,7 @@ xdp_dbus_generated = custom_target('xdp-dbus',
              'org.freedesktop.portal.ProxyResolver.xml',
              'org.freedesktop.portal.Trash.xml'],
     output : ['xdp-dbus.h', 'xdp-dbus.c'],
+    depends : gdbus_codegen_built_targets,
     depend_files : gdbus_codegen_built_files,
     command : [python, gdbus_codegen,
                '--interface-prefix', 'org.freedesktop.portal.',
@@ -253,6 +254,7 @@ xdp_dbus_generated = custom_target('xdp-dbus',
 gdbus_daemon_generated = custom_target('gdbus-daemon-generated',
     input : ['dbus-daemon.xml'],
     output : ['gdbus-daemon-generated.h', 'gdbus-daemon-generated.c'],
+    depends : gdbus_codegen_built_targets,
     depend_files : gdbus_codegen_built_files,
     command : [python, gdbus_codegen,
                '--interface-prefix', 'org.',
@@ -881,10 +883,8 @@ libgio_dep = declare_dependency(link_with : libgio,
 pkg.generate(libgio,
   requires : ['glib-2.0', 'gobject-2.0'],
   variables : [
-    'datadir=' + '${prefix}' / get_option('datadir'),
     'schemasdir=' + '${datadir}' / schemas_subdir,
     'dtdsdir=' + '${datadir}' / dtds_subdir,
-    'bindir=' + '${prefix}' / get_option('bindir'),
     'giomoduledir=' + pkgconfig_giomodulesdir,
     'gio=' + '${bindir}' / 'gio',
     'gio_querymodules=' + pkgconfig_multiarch_bindir / 'gio-querymodules',
diff --git a/gio/tests/meson.build b/gio/tests/meson.build
--- a/gio/tests/meson.build
+++ b/gio/tests/meson.build
@@ -359,6 +359,7 @@ if host_machine.system() != 'windows'
         input :   ['test-codegen.xml'],
         output :  ['gdbus-test-codegen-generated.h',
                    'gdbus-test-codegen-generated.c'],
+        depends : gdbus_codegen_built_targets,
         depend_files : gdbus_codegen_built_files,
         command : [python, gdbus_codegen,
                    '--interface-prefix', 'org.project.',
@@ -375,6 +376,7 @@ if host_machine.system() != 'windows'
         input :   ['test-codegen.xml'],
         output :  ['gdbus-test-codegen-generated-min-required-2-64.h',
                    'gdbus-test-codegen-generated-min-required-2-64.c'],
+        depends : gdbus_codegen_built_targets,
         depend_files : gdbus_codegen_built_files,
         command : [python, gdbus_codegen,
                    '--glib-min-required', '2.64',
@@ -391,6 +393,7 @@ if host_machine.system() != 'windows'
       custom_target('gdbus-test-codegen-generated-interface-info-h',
           input :   ['test-codegen.xml'],
           output :  ['gdbus-test-codegen-generated-interface-info.h'],
+          depends : gdbus_codegen_built_targets,
           depend_files : gdbus_codegen_built_files,
           command : [python, gdbus_codegen,
                      '--interface-info-header',
@@ -400,6 +403,7 @@ if host_machine.system() != 'windows'
       custom_target('gdbus-test-codegen-generated-interface-info-c',
           input :   ['test-codegen.xml'],
           output :  ['gdbus-test-codegen-generated-interface-info.c'],
+          depends : gdbus_codegen_built_targets,
           depend_files : gdbus_codegen_built_files,
           command : [python, gdbus_codegen,
                      '--interface-info-body',
@@ -512,6 +516,7 @@ if host_machine.system() != 'windows'
         input :   ['../org.freedesktop.portal.Documents.xml'],
         output :  ['fake-document-portal-generated.h',
                    'fake-document-portal-generated.c'],
+        depends : gdbus_codegen_built_targets,
         depend_files : gdbus_codegen_built_files,
         command : [python, gdbus_codegen,
                    '--interface-prefix', 'org.freedesktop.portal.',
@@ -796,6 +801,7 @@ if not meson.is_cross_build()
   test_gresource = custom_target('test.gresource',
     input : 'test.gresource.xml',
     output : 'test.gresource',
+    depends : fs.copyfile('test1.txt', 'test-generated.txt'),
     command : [glib_compile_resources,
                compiler_type,
                '--target=@OUTPUT@',
@@ -872,12 +878,6 @@ if not meson.is_cross_build()
                '--manual-register',
                '@INPUT@'])
 
-  # referenced by test.gresource.xml
-  test_generated_txt = configure_file(input : 'test1.txt',
-    output : 'test-generated.txt',
-    copy : true,
-  )
-
   resources_extra_sources = [
     test_gresource,
     test_resources_c,
diff --git a/glib/meson.build b/glib/meson.build
--- a/glib/meson.build
+++ b/glib/meson.build
@@ -445,8 +445,6 @@ pkg.generate(libglib,
   subdirs : ['glib-2.0'],
   extra_cflags : ['-I${libdir}/glib-2.0/include'] + win32_cflags,
   variables : [
-    'bindir=' + '${prefix}' / get_option('bindir'),
-    'datadir=' + '${prefix}' / get_option('datadir'),
     'glib_genmarshal=' + '${bindir}' / 'glib-genmarshal',
     'gobject_query=' + '${bindir}' / 'gobject-query',
     'glib_mkenums=' + '${bindir}' / 'glib-mkenums',
diff --git a/meson.build b/meson.build
--- a/meson.build
+++ b/meson.build
@@ -1,7 +1,7 @@
 project('glib', 'c',
   version : '2.78.0',
   # NOTE: See the policy in docs/meson-version.md before changing the Meson dependency
-  meson_version : '>= 0.60.0',
+  meson_version : '>= 0.64.0',
   default_options : [
     'buildtype=debugoptimized',
     'warning_level=3',
@@ -2454,6 +2454,7 @@ if want_systemtap and enable_dtrace
   enable_systemtap = true
 endif
 
+fs = import('fs')
 pkg = import('pkgconfig')
 windows = import('windows')
 subdir('tools')
