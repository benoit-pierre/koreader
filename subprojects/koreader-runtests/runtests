#!/bin/bash

set -eo pipefail

kodir="$(cd "$(dirname "$0")" && pwd -P)"
suite='all'

if [[ $# -ne 0 && "$1" != -* ]]; then
    suite="$1"
    shift
fi

if which meson >/dev/null 2>&1; then

    runtests() {
        rm -rf .testrun
        meson setup --backend=none --prefix="${PWD}" .testrun testrunner
        local -a testcmd=(meson test -C .testrun --print-errorlogs)
        case "${suite}" in
            all) ;;
            bench) testcmd+=(--benchmark) ;;
            *) testcmd+=(--suite="${suite}") ;;
        esac
        if [[ "${CI}" = 'true' ]]; then
            testcmd+=(--num-processes=$(($(getconf _NPROCESSORS_ONLN) * 2)))
        fi
        testcmd+=("$@")
        if [[ "${CI}" = 'true' ]]; then
            # Strip fancy progress output from meson.
            "${testcmd[@]}" | cat
        else
            "${testcmd[@]}"
        fi
    }

else

    runtests() {
        find -L spec -name '*.sdr' -print0 | xargs -0 rm -rf
        local -a testcmd=(
            # Don't fail the testsuite on ASAN detected leaks.
            env LSAN_OPTIONS="${LSAN_OPTIONS:-exitcode=0}"
            ./luajit -e 'require "busted.runner" {standalone = false}' /dev/null
            '--exclude-tags=notest' '--sort-files'
        )
        if [[ "${suite}" = 'bench' ]]; then
            testcmd+=('--pattern=_bench')
            suite='all'
        fi
        testcmd+=("--run=${suite}" "$@")
        "${testcmd[@]}"
    }

fi

cd "${kodir}"
if [[ "${CI}" = 'true' ]]; then
    # Strip fancy output from
    runtests "$@" | cat
else
    runtests "$@"
fi

# vim: sw=4
